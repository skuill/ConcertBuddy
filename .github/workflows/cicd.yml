name: CI/CD ConcertBuddy

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  release:
    types: [published]

jobs:

  build_solution:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    - name: Restore dependencies
      run: dotnet restore src/ConcertBuddy.sln
    - name: Build
      run: dotnet build src/ConcertBuddy.sln --no-restore --configuration Release --verbosity minimal
      
  publish_docker:
    needs: build_solution
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/') # runs only when release with a new tag
    steps:
    - uses: actions/checkout@v4
    
    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Extract release version
      id: get_version
      run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

    - name: Build and push Docker image
      run: |
        docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/concertbuddyconsoleapp:${{ env.RELEASE_VERSION }} -f src/ConcertBuddy.ConsoleApp/Dockerfile src
        docker tag ${{ secrets.DOCKERHUB_USERNAME }}/concertbuddyconsoleapp:${{ env.RELEASE_VERSION }} ${{ secrets.DOCKERHUB_USERNAME }}/concertbuddyconsoleapp:latest
        docker push ${{ secrets.DOCKERHUB_USERNAME }}/concertbuddyconsoleapp:${{ env.RELEASE_VERSION }}
        docker push ${{ secrets.DOCKERHUB_USERNAME }}/concertbuddyconsoleapp:latest
